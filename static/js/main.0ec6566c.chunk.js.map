{"version":3,"sources":["components/Square.js","components/Board.js","reducers/index.js","components/Game.js","containers/GameContainer.js","actions/index.js","constants/index.js","index.js"],"names":["Square","squareClass","this","props","winner","className","data-pro","value","onClick","Component","Board","i","squares","includes","sizeOfBoard","Math","sqrt","length","board","Array","fill","j","squareKey","push","key","renderSquare","renderBoard","React","initialState","history","location","xIsNext","stepNumber","isReverse","changeSquares","state","slice","calculateWinner","size","floor","join","concat","index","winLocation","winPlayer","restart","jump","id","document","querySelectorAll","forEach","item","classList","remove","getElementById","add","Game","status","moves","map","step","move","desc","style","marginTop","jumpTo","clickSquare","type","sort","reversed","reverse","GameContainer","connect","dispatch","store","createStore","action","devToolsEnhancer","ReactDOM","render"],"mappings":"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","file":"static/js/main.0ec6566c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n// function Square(props) {\n//     return(\n//       <button className=\"square\" data-pro={props.value} onClick={props.onClick}>{props.value}</button>\n//     );\n//   }\n\nclass Square extends Component {\n  render() {\n    const squareClass = `square ${this.props.winner}`\n    return (\n      <button className={squareClass} data-pro={this.props.value} onClick={this.props.onClick}>{this.props.value}</button>\n    );\n  }\n}\n\nexport default Square;","import React, {Component}  from 'react';\nimport Square from './Square';\nclass Board extends React.Component {\n    renderSquare(i) {\n      const winner = this.props.winner;\n      return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} winner={winner && winner.includes(i) ? 'winner' : ''}/>\n    }\n  \n    renderBoard() {\n      const sizeOfBoard = Math.sqrt(this.props.squares.length);\n      const board = Array(sizeOfBoard).fill(null);\n      for (let i = 0; i < sizeOfBoard; i++) {\n        const squares = Array(sizeOfBoard).fill(null);\n        for (let j = 0; j < sizeOfBoard; j++) {\n          var squareKey = i * sizeOfBoard + j;\n          squares.push(<span key={squareKey}>{this.renderSquare(squareKey)}</span>);\n        }\n        board.push(<div key={i}>{squares}</div>);\n      }\n      return board;\n    }\n  \n    render() {\n      return (\n        <div>\n  \n          <div>{this.renderBoard()}</div>\n        </div>\n      );\n    }\n  }\n\nexport default Board;","import { CLICK_SQUARE, RESTART, SORT, JUMP_TO } from '../constants/index';\r\n\r\nconst initialState = {\r\n    history: [{\r\n        squares: Array(400).fill(null),\r\n        location: ''\r\n    }],\r\n    xIsNext: true,\r\n    stepNumber: 0,\r\n    isReverse: false,\r\n}\r\n\r\nconst changeSquares = (state, i) => {\r\n    const history = state.history.slice(0, state.stepNumber + 1);\r\n    const current = history[history.length - 1]; //Get the last element of history\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n    }\r\n\r\n    const size = Math.sqrt(history[0].squares.length);\r\n    const location = [Math.floor(i / size) + 1, (i % size) + 1].join(\",\")\r\n    squares[i] = state.xIsNext ? 'X' : 'O';\r\n    return ({\r\n        history: history.concat([{\r\n            squares: squares,\r\n            location: location\r\n        }]),\r\n        xIsNext: !state.xIsNext,\r\n        stepNumber: history.length,\r\n    });\r\n}\r\n\r\nexport const calculateWinner = (squares) => {\r\n    const size = Math.sqrt(squares.length);\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        for (let j = 0; j < size; j++) {\r\n            const index = i * size + j;\r\n\r\n\r\n            if (((index < (i + 1) * size - 4) && (squares[index - 1] === null || squares[index + 5] === null) && squares[index] && squares[index] === squares[index + 1] && squares[index] === squares[index + 2] && squares[index] === squares[index + 3] && squares[index] === squares[index + 4])) {\r\n                return {\r\n                    winLocation: [index, index + 1, index + 2, index + 3, index + 4],\r\n                    winPlayer: squares[index]\r\n                };\r\n            }\r\n            else if (((squares[index - size] === null || squares[index + 5 * size] === null) && squares[index] && squares[index] === squares[index + size * 1] && squares[index] === squares[index + size * 2] && squares[index] === squares[index + size * 3] && squares[index] === squares[index + size * 4])) {\r\n                return {\r\n                    winLocation: [index, index + size * 1, index + size * 2, index + size * 3, index + size * 4],\r\n                    winPlayer: squares[index]\r\n                };\r\n            }\r\n            else if (((squares[index - size * 1 - 1] === null || squares[index + size * 5 + 5] === null) && squares[index] && squares[index] === squares[index + size * 1 + 1] && squares[index] === squares[index + size * 2 + 2] && squares[index] === squares[index + size * 3 + 3] && squares[index] === squares[index + size * 4 + 4])) {\r\n                return {\r\n                    winLocation: [index, index + size * 1 + 1, index + size * 2 + 2, index + size * 3 + 3, index + size * 4 + 4],\r\n                    winPlayer: squares[index]\r\n                };\r\n            }\r\n            else if (((squares[index - size * 1 + 1] === null || squares[index + size * 5 - 5] === null) && squares[index] && squares[index] === squares[index + size * 1 - 1] && squares[index] === squares[index + size * 2 - 2] && squares[index] === squares[index + size * 3 - 3] && squares[index] === squares[index + size * 4 - 4])) {\r\n                return {\r\n                    winLocation: [index, index + size * 1 - 1, index + size * 2 - 2, index + size * 3 - 3, index + size * 4 - 4],\r\n                    winPlayer: squares[index]\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\nconst restart = (state) => {\r\n    const history = state.history.slice()[0];\r\n\r\n    const squares = history.squares.slice();\r\n    return {\r\n        history: [{ squares: squares }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        isReverse: false,\r\n    }\r\n\r\n}\r\n\r\nconst jump = (id) => {\r\n    const temp = document.querySelectorAll('.chosen-btn');\r\n    temp.forEach(item => {\r\n        item.classList.remove('chosen-btn');\r\n    });\r\n\r\n    document.getElementById(`${id}`).classList.add('chosen-btn');\r\n\r\n    return {\r\n        stepNumber: id,\r\n        xIsNext: id % 2 === 0\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const gameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CLICK_SQUARE:\r\n            return ({ ...state, ...changeSquares(state, action.id) })\r\n\r\n        case RESTART:\r\n            return {\r\n                ...restart(state)\r\n            }\r\n\r\n        case JUMP_TO:\r\n            return {\r\n                ...state,\r\n                ...jump(action.id)\r\n            }\r\n        case SORT:\r\n            return {\r\n                ...state, isReverse: !state.isReverse\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Board from './Board';\r\nimport './Game.css';\r\nimport { calculateWinner } from '../reducers/index'\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        const history = this.props.history;\r\n        const current = history[this.props.stepNumber];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        let status;\r\n\r\n        if (winner) {\r\n\r\n            status = \"Winner is: \" + winner.winPlayer;\r\n\r\n        } else {\r\n\r\n            status = \"Next player is: \" + (this.props.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? `Go to move #${move} (${step.location})` : 'Go to game start!';\r\n            return (\r\n                <li key={move} >\r\n                    <button style={{ marginTop: 5 }} className=\"btn btn-sm btn-outline-dark\" id={move} onClick={() => this.props.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        })\r\n        return (\r\n            <div className=\"game\">\r\n\r\n                <div className=\"game-board\">\r\n                    <Board squares={squares} onClick={(i) => this.props.clickSquare(i)} winner={winner && winner.winLocation} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 status\">\r\n                            {status}\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <button className=\"btn btn-sm btn-outline-success\" type=\"button\" onClick={() => this.props.restart()}>Restart</button>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <button className=\"btn btn-sm btn-outline-primary\" onClick={() => this.props.sort()}>Sort step</button>\r\n                        </div>\r\n                    </div>\r\n                    <ol reversed={this.props.isReverse ? 'reverse' : ''}>{this.props.isReverse ? moves.reverse() : moves}</ol>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clickSquare, jumpTo, sort, restart } from '../actions/index';\r\nimport Game from '../components/Game';\r\n\r\nclass GameContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Game history={this.props.history}\r\n                xIsNext={this.props.xIsNext}\r\n                stepNumber={this.props.stepNumber}\r\n                isReverse={this.props.isReverse}\r\n                clickSquare={this.props.clickSquare}\r\n                jumpTo={this.props.jumpTo}\r\n                sort={this.props.sort}\r\n                restart={this.props.restart}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    history: state.history,\r\n    xIsNext: state.xIsNext,\r\n    stepNumber: state.stepNumber,\r\n    isReverse: state.isReverse,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    clickSquare: (id) => dispatch(clickSquare(id)),\r\n    jumpTo: (id) => dispatch(jumpTo(id)),\r\n    sort: () => dispatch(sort()),\r\n    restart: () => dispatch(restart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer)\r\n\r\n","\r\n//action Types\r\nimport * as types from '../constants/index'\r\n\r\n\r\n//actions\r\n\r\nexport const clickSquare = (id) => ({\r\n    type: types.CLICK_SQUARE,\r\n    id\r\n});\r\n\r\nexport const restart = () => ({\r\n    type: types.RESTART\r\n})\r\n\r\nexport const sort = () => ({\r\n    type: types.SORT\r\n})\r\n\r\nexport const jumpTo = (id) => ({\r\n    type: types.JUMP_TO,\r\n    id\r\n})\r\n","export const CLICK_SQUARE = 'CLICK_SQUARE';\r\nexport const RESTART = 'RESTART';\r\nexport const SORT = 'SORT';\r\nexport const JUMP_TO = 'JUMP_TO';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game';\nimport { gameReducer } from './reducers/index';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport GameContainer from './containers/GameContainer';\n\n\nimport devToolsEnhancer from 'remote-redux-devtools';\nconst store = createStore(gameReducer, devToolsEnhancer());\n\n\n\nReactDOM.render(<Provider store={store}>\n    <GameContainer />\n</Provider>,\n    document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}